<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook original-version='18.1' source-build='2018.3.0 (20183.18.1018.1932)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='hospitals' inline='true' name='federated.0gpyisw0132hb512w6l4u17lwrzo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hospitals' name='semistructpassivestore-direct.0frb3vc1i2sp4k18zpv9d1sbhaz0'>
            <connection class='semistructpassivestore-direct' directory='/Users/admin/Desktop/VandyHacksV/map2galaxy' filename='hospitals.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[hospitals.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0frb3vc1i2sp4k18zpv9d1sbhaz0' name='hospitals.json' table='[hospitals.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>lat</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>lng</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nearestCity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nearestCity]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>nearestCity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[score]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>score</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>lat</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lng' datatype='real' name='[lng]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>lng</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Nearest City' datatype='real' name='[nearestCity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>nearestCity</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Score' datatype='real' name='[score]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>score</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>state</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Hospitals' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[score]' type='field' />
        <folder-item name='[state]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='hospitals' name='federated.0gpyisw0132hb512w6l4u17lwrzo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpyisw0132hb512w6l4u17lwrzo'>
            <column-instance column='[nearestCity]' derivation='Avg' name='[avg:nearestCity:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>city</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nearest City' datatype='real' name='[nearestCity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>nearestCity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[score]' derivation='None' name='[none:score:ok]' pivot='key' type='ordinal' />
            <column-instance column='[score]' derivation='None' name='[none:score:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Score' datatype='real' name='[score]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>score</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]' included-values='in-range'>
            <min>-0.5</min>
          </filter>
          <slices>
            <column>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:city:nk]' />
              <lod column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]</rows>
        <cols>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='hospitals' name='federated.0gpyisw0132hb512w6l4u17lwrzo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpyisw0132hb512w6l4u17lwrzo'>
            <column-instance column='[nearestCity]' derivation='Avg' name='[avg:nearestCity:qk]' pivot='key' type='quantitative' />
            <column caption='Nearest City' datatype='real' name='[nearestCity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>nearestCity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[score]' derivation='None' name='[none:score:ok]' pivot='key' type='ordinal' />
            <column-instance column='[score]' derivation='None' name='[none:score:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Score' datatype='real' name='[score]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>score</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]' included-values='in-range'>
            <min>-0.5</min>
          </filter>
          <slices>
            <column>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]</rows>
        <cols>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:city:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:name:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A279F73-504C-4C94-9868-45B694D26BF6}' />
    </window>
    <window class='worksheet' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:city:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:name:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE202356-A330-4590-8D6A-18D63A0D7EAF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 1 (2)' width='384'>
      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
      ABiKAACAoQgAABjKk+gJAMmqtqFFkWgs0dPoldz+afK4ef9nOgIA9NKP576tXXXNiZ5Grzx1
      18XK6RdM9DSQYH0mAJFwSB2dIblcHvn8Prld1pcua9sxhUMhhSMRudxepaR45XbxbgiAWfpE
      ANoO1Gje3Ke1Yds+WSl+fWXKNF389fFK6SYCtm3r4/f+rBdfWar9Te3y+jN09lcv02XfGC93
      AuYOAInSBwIQ1oK5v1NbVqV+PvMiNe/4WL+Zs1ADcnN0zqnFRyxdvfZtzfvTf+uq636gsSMK
      1Fq/V1v3tOvLtxcAoG9K+v0e7Xs3afVer7512flK83mUd1KFLpo0XCtWrFf0iKVjenvpX3TG
      5G9p3IjBclsuZQwYpFNHlST/NwIAjlLSbwG0NjYqZ1iRBqT5JUmWZamwpEz2ulVqi0rpX9yv
      E23Spm1hffuqHG1ct1bNHWENyBusoYPz5Plsd5Ft24pGu0lHLKZQKHQ8VglJwrbtRE+h18Lh
      SK9/nyORSJxnc/xEIr1f774o6QPQcKBBllv64j4cvy9NfndM+vvnpx1SZ7hNz/32ceXl5SrF
      FdOu6hd00oSv68qLzpPPfeiLfFkAkvkJD3xRNBrt9ve8Z49Nzo++SlIs1vv17ouSPgCpqQFZ
      1uF78KPRqKLdvP7LluTur29ff6OK83PkdUk7P/lQc+f/VZ9WVqq8sL8sy5LP5ztinFAopJSU
      FMfWA8nn73/vkonf71MgEOjVY32+5H0epKT0fr37oqTf9R1MD+rg/iaFwp9XveHAbrW5MuT9
      +7VzBZTualI4JU3+FK/cHq+GjihXZnpQoU42CwGYJekDkFE4XGlN2/XRxmrFbFvh9gZ9+O4a
      DRlVJr9L6mxtUu3+hkNbA+40jT5lkN554121hw9txjbuq1VHZyfv7gEYJ+l3Abl82bp4yula
      sHCu6raPU0vNJu0OB3Td+HJZkqrX/lXz3q7XrB9Nl1eWzr1gqn79+HOaM2+PCvpn6NMtnyiz
      uELDBmUmelUA4LhK+gBI0innXipf/0HatHOf0oZXaPJp4zV4QJokKXd4paamdXT9kVdmwQh9
      f+aNWrNugxpbwzr9nIt06imjFPAk/cYQAByVPhEAWR6NqJioERVH3pU+sFBjBx5+W/+8Ip2b
      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
      BAAADPX/AMfeKrJmxAxIAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
