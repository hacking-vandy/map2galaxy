<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook original-version='18.1' source-build='2018.3.0 (20183.18.1018.1932)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='hospitals' inline='true' name='federated.0gpyisw0132hb512w6l4u17lwrzo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hospitals' name='semistructpassivestore-direct.0frb3vc1i2sp4k18zpv9d1sbhaz0'>
            <connection class='semistructpassivestore-direct' directory='/Users/admin/Desktop/VandyHacksV/map2galaxy' filename='hospitals.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[hospitals.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0frb3vc1i2sp4k18zpv9d1sbhaz0' name='hospitals.json' table='[hospitals.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>lat</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>lng</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nearestCity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nearestCity]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>nearestCity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[score]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>score</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[hospitals.json]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>lat</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lng' datatype='real' name='[lng]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>lng</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Nearest City' datatype='real' name='[nearestCity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>nearestCity</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Score' datatype='real' name='[score]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>score</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>state</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Hospitals' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[score]' type='field' />
        <folder-item name='[state]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='hospitals' name='federated.0gpyisw0132hb512w6l4u17lwrzo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpyisw0132hb512w6l4u17lwrzo'>
            <column-instance column='[nearestCity]' derivation='Avg' name='[avg:nearestCity:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>city</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nearest City' datatype='real' name='[nearestCity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>nearestCity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[score]' derivation='None' name='[none:score:ok]' pivot='key' type='ordinal' />
            <column-instance column='[score]' derivation='None' name='[none:score:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Score' datatype='real' name='[score]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>score</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]' included-values='in-range'>
            <min>-0.5</min>
          </filter>
          <slices>
            <column>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:city:nk]' />
              <lod column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]</rows>
        <cols>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='hospitals' name='federated.0gpyisw0132hb512w6l4u17lwrzo' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpyisw0132hb512w6l4u17lwrzo'>
            <column-instance column='[nearestCity]' derivation='Avg' name='[avg:nearestCity:qk]' pivot='key' type='quantitative' />
            <column caption='Nearest City' datatype='real' name='[nearestCity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>nearestCity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[score]' derivation='None' name='[none:score:ok]' pivot='key' type='ordinal' />
            <column-instance column='[score]' derivation='None' name='[none:score:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Score' datatype='real' name='[score]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>score</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]' included-values='in-range'>
            <min>-0.5</min>
          </filter>
          <slices>
            <column>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0gpyisw0132hb512w6l4u17lwrzo].[avg:nearestCity:qk]</rows>
        <cols>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:city:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:name:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A279F73-504C-4C94-9868-45B694D26BF6}' />
    </window>
    <window class='worksheet' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:city:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:name:nk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:ok]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:score:qk]</field>
            <field>[federated.0gpyisw0132hb512w6l4u17lwrzo].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE202356-A330-4590-8D6A-18D63A0D7EAF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 1 (2)' width='384'>
      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
      ABiKAACAoQgAABjKk+gJAMmqtqFFkWgs0dPoldz+afK4ef9nOgIA9NKP576tXXXNiZ5Grzx1
      18XK6RdM9DSQYH0mAJFwSB2dIblcHvn8Prld1pcua9sxhUMhhSMRudxepaR45XbxbgiAWfpE
      ANoO1Gje3Ke1Yds+WSl+fWXKNF389fFK6SYCtm3r4/f+rBdfWar9Te3y+jN09lcv02XfGC93
      AuYOAInSBwIQ1oK5v1NbVqV+PvMiNe/4WL+Zs1ADcnN0zqnFRyxdvfZtzfvTf+uq636gsSMK
      1Fq/V1v3tOvLtxcAoG9K+v0e7Xs3afVer7512flK83mUd1KFLpo0XCtWrFf0iKVjenvpX3TG
      5G9p3IjBclsuZQwYpFNHlST/NwIAjlLSbwG0NjYqZ1iRBqT5JUmWZamwpEz2ulVqi0rpX9yv
      E23Spm1hffuqHG1ct1bNHWENyBusoYPz5Plsd5Ft24pGu0lHLKZQKHQ8VglJwrbtRE+h18Lh
      SK9/nyORSJxnc/xEIr1f774o6QPQcKBBllv64j4cvy9NfndM+vvnpx1SZ7hNz/32ceXl5SrF
      FdOu6hd00oSv68qLzpPPfeiLfFkAkvkJD3xRNBrt9ve8Z49Nzo++SlIs1vv17ouSPgCpqQFZ
      1uF78KPRqKLdvP7LluTur29ff6OK83PkdUk7P/lQc+f/VZ9WVqq8sL8sy5LP5ztinFAopJSU
      FMfWA8nn73/vkonf71MgEOjVY32+5H0epKT0fr37oqTf9R1MD+rg/iaFwp9XveHAbrW5MuT9
      +7VzBZTualI4JU3+FK/cHq+GjihXZnpQoU42CwGYJekDkFE4XGlN2/XRxmrFbFvh9gZ9+O4a
      DRlVJr9L6mxtUu3+hkNbA+40jT5lkN554121hw9txjbuq1VHZyfv7gEYJ+l3Abl82bp4yula
      sHCu6raPU0vNJu0OB3Td+HJZkqrX/lXz3q7XrB9Nl1eWzr1gqn79+HOaM2+PCvpn6NMtnyiz
      uELDBmUmelUA4LhK+gBI0innXipf/0HatHOf0oZXaPJp4zV4QJokKXd4paamdXT9kVdmwQh9
      f+aNWrNugxpbwzr9nIt06imjFPAk/cYQAByVPhEAWR6NqJioERVH3pU+sFBjBx5+W/+8Ip2b
      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
      BAAADPX/AMfeKrJmxAxIAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
